/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@ionic/core';
import 'ionicons';


declare global {

  namespace StencilComponents {
    interface MyApp {

    }
  }

  interface HTMLMyAppElement extends StencilComponents.MyApp, HTMLStencilElement {}

  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-app': JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageDetails {
      'data': any[];
      'label': string;
    }
  }

  interface HTMLPageDetailsElement extends StencilComponents.PageDetails, HTMLStencilElement {}

  var HTMLPageDetailsElement: {
    prototype: HTMLPageDetailsElement;
    new (): HTMLPageDetailsElement;
  };
  interface HTMLElementTagNameMap {
    'page-details': HTMLPageDetailsElement;
  }
  interface ElementTagNameMap {
    'page-details': HTMLPageDetailsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-details': JSXElements.PageDetailsAttributes;
    }
  }
  namespace JSXElements {
    export interface PageDetailsAttributes extends HTMLAttributes {
      'data'?: any[];
      'label'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageHome {

    }
  }

  interface HTMLPageHomeElement extends StencilComponents.PageHome, HTMLStencilElement {}

  var HTMLPageHomeElement: {
    prototype: HTMLPageHomeElement;
    new (): HTMLPageHomeElement;
  };
  interface HTMLElementTagNameMap {
    'page-home': HTMLPageHomeElement;
  }
  interface ElementTagNameMap {
    'page-home': HTMLPageHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-home': JSXElements.PageHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface PageHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyHeatmap {
      'data': any[];
      'heatBlur': number;
      'heatMax': number;
      'heatSize': number;
      'height': number;
      'label': string;
      'max': number;
      'min': number;
      'width': number;
    }
  }

  interface HTMLMyHeatmapElement extends StencilComponents.MyHeatmap, HTMLStencilElement {}

  var HTMLMyHeatmapElement: {
    prototype: HTMLMyHeatmapElement;
    new (): HTMLMyHeatmapElement;
  };
  interface HTMLElementTagNameMap {
    'my-heatmap': HTMLMyHeatmapElement;
  }
  interface ElementTagNameMap {
    'my-heatmap': HTMLMyHeatmapElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-heatmap': JSXElements.MyHeatmapAttributes;
    }
  }
  namespace JSXElements {
    export interface MyHeatmapAttributes extends HTMLAttributes {
      'data'?: any[];
      'heatBlur'?: number;
      'heatMax'?: number;
      'heatSize'?: number;
      'height'?: number;
      'label'?: string;
      'max'?: number;
      'min'?: number;
      'width'?: number;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageRange {

    }
  }

  interface HTMLPageRangeElement extends StencilComponents.PageRange, HTMLStencilElement {}

  var HTMLPageRangeElement: {
    prototype: HTMLPageRangeElement;
    new (): HTMLPageRangeElement;
  };
  interface HTMLElementTagNameMap {
    'page-range': HTMLPageRangeElement;
  }
  interface ElementTagNameMap {
    'page-range': HTMLPageRangeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-range': JSXElements.PageRangeAttributes;
    }
  }
  namespace JSXElements {
    export interface PageRangeAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
